generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? // @db.Text
  access_token             String? // @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? // @db.Text
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  refresh_token_expires_in Int?

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  handle        String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]

  stripeAccountId             String?  @unique
  hasFinishedStripeOnboarding Boolean? @default(false)

  profile Profile?
  teaps   Teap[]
}

model Profile {
  id  String  @id @default(cuid())
  bio String?

  thankYouMessage String? // message to be shown after a user sends a teap

  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Teap {
  id         String  @id @default(cuid())
  senderName String?
  message    String?

  price       Int // in cents (USD)
  isCompleted Boolean @default(false) // wether stripe payment is completed

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  receiver   User   @relation(fields: [receiverId], references: [id])
  receiverId String
}
